Q1..
    <!DOCTYPE html>
    <html>
    <script>
        const arr = [3,4,1,25,5,23,23,34,20,56,4,2,52,56,53,4,3,2,65,24,78,9];
        for(var i=0; i<arr.length; i++)
            {
                if((arr[i] % 2) === 0)
                {
                    console.log(arr[i]);
                }
            }
    </script>
    </html>

Q2..
    <!DOCTYPE html>
    <html>
    <script>
        const arr = [0,0,1,1,0,0,0,1,0,0,1,1,1,0];
        let count =0;
        let max = 0;
        for(var i=0; i<arr.length; i++)
            {
                if(arr[i] === 0)
                {
                    count = 0;
                }
                else{
                count++;
                if(count > max) max = count;
                }
            }
            console.log(max);
    </script>
    </html>


Q3..
    <!DOCTYPE html>
    <html>
    <script>
        const arr =[1,2,3,4,5,6,7,8,9,1,1,1,3,7,7];
        const sorted_arr = arr.sort();
        const result = [];
        for(let i=0; i<sorted_arr.length; i++)
            {
                for(let j=i+1; j<sorted_arr.length; j++)  
                {  
                    if(sorted_arr[j] === sorted_arr[i])
                    {
                        if(result.indexOf(sorted_arr[i]) === -1)
                        {
                        result.push(sorted_arr[i]);
                        }
                    }
                } 
            }
        console.log(result)
    </script>
    </html>


Q4..
    constructor(props) {
    super(props);
    this.state = {
        dataSource: ""
    }
   
    }
    fetchExample() {

    return fetch('www.example.com/api/get/1', {
        method: 'POST',
        headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' },

    })
        .then((response) => response.json())
        .then((responseJson) => {
            this.setState({
                dataSource: responseJson
            });
        })
        .catch((error) => {
            console.error(error.message);
        })
    }

Q5..
	unable to solve the problem




